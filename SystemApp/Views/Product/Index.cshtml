@using DataLayer.Models
@using SystemApp.ViewModels
@model PaginatedList<Product>

@{
    ViewData["Title"] = "Product List";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">Product List</h2>
        <a asp-action="Add" class="btn btn-primary">➕ Add New Product</a>
    </div>

    <!-- Filter Form -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="filterForm">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="searchTerm" class="form-label">Search by Name</label>
                        <input type="text" id="searchTerm" name="searchTerm" class="form-control" value="@ViewBag.SearchTerm" placeholder="Enter product name">
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Filter by Quantity</label>
                        <div class="input-group">
                            <select id="quantityFilter" name="quantityFilter" class="form-select">
                                <option value="greater" selected="@(ViewBag.QuantityFilter == "greater" ? "selected" : null)">Greater Than</option>
                                <option value="less" selected="@(ViewBag.QuantityFilter == "less" ? "selected" : null)">Less Than</option>
                                <option value="equal" selected="@(ViewBag.QuantityFilter == "equal" ? "selected" : null)">Equals</option>
                            </select>
                            <input type="number" id="quantityInput" name="quantity" class="form-control" value="@ViewBag.Quantity" placeholder="Enter quantity">
                        </div>
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <a asp-action="Index" class="btn btn-secondary w-100">Clear</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!-- Summary Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row d-flex justify-content-between">
                <!-- Total Sell Price -->
                <div class="col-md-4 d-flex align-items-center">
                    <div class="bg-success text-white rounded-circle p-3 me-3">
                        <i class="fas fa-dollar-sign fa-2x"></i> <!-- Font Awesome icon -->
                    </div>
                    <div>
                        <h5 class="text-muted mb-1">Total Sell Price</h5>
                        <p id="totalSellPrice" class="fw-bold fs-4 mb-0">$0.00</p>
                    </div>
                </div>

                <!-- Total Buy Price -->
                <div class="col-md-4 d-flex align-items-center">
                    <div class="bg-warning text-white rounded-circle p-3 me-3">
                        <i class="fas fa-dollar-sign fa-2x"></i> <!-- Font Awesome icon -->
                    </div>
                    <div>
                        <h5 class="text-muted mb-1">Total Buy Price</h5>
                        <p id="totalBuyPrice" class="fw-bold fs-4 mb-0">$0.00</p>
                    </div>
                </div>

                <!-- Total Profit -->
                <div class="col-md-4 d-flex align-items-center">
                    <div class="bg-primary text-white rounded-circle p-3 me-3">
                        <i class="fas fa-chart-line fa-2x"></i> <!-- Font Awesome icon -->
                    </div>
                    <div>
                        <h5 class="text-muted mb-1">Total Profit</h5>
                        <p id="totalProfit" class="fw-bold fs-4 mb-0">$0.00</p>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Product Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Buy Price ($)</th>
                        <th>Sell Price ($)</th>
                        <th>Quantity</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    @foreach (var product in Model.Items)
                    {
                        <tr>
                            <td>@product.ProductName</td>
                            <td>@product.buyPrice.ToString("C")</td>
                            <td>@product.SellPrice.ToString("C")</td>
                            <td>@product.Quantity</td>
                            <td class="text-center">
                                <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning btn-sm">Edit</a>
                                <a asp-action="Remove" asp-route-id="@product.Id" class="btn btn-danger btn-sm">Remove</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    <nav>
        <ul class="pagination justify-content-center mt-3" id="paginationControls">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber - 1)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="#" data-page="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>

    <div class="mt-3 text-end">
        <a asp-action="Profits" class="btn btn-success mt-3">💰 View Profits</a>
    </div>
    <div class="mt-3 text-end">
        <a asp-action="MoneyFlow" class="btn btn-danger mt-3">💰 View MoneyFlow</a>
    </div>
</div>

<!-- AJAX Script for Filtering, Pagination, and Totals -->
@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
<script src="~/lib/jquery/dist/jquery.js" asp-append-version="true"></script>

<script>
    $(document).ready(function () {
        // Function to load products with filters and pagination
        function loadProducts(page = 1) {
            let searchTerm = $("#searchTerm").val();
            let quantityFilter = $("#quantityFilter").val();
            let quantity = $("#quantityInput").val();

            $.ajax({
                url: "@Url.Action("FilterProducts", "Product")",
                type: "GET",
                data: {
                    searchTerm: searchTerm,
                    quantityFilter: quantityFilter,
                    quantity: quantity,
                    pageNumber: page,
                    pageSize: @Model.PageSize
                },
                success: function (data) {
                    // Update the product table
                    let tbody = $("#productTableBody");
                    tbody.empty();

                    data.products.forEach(product => {
                        let row = `<tr>
                            <td>${product.productName}</td>
                            <td>$${product.buyPrice.toFixed(2)}</td>
                            <td>$${product.sellPrice.toFixed(2)}</td>
                            <td>${product.quantity}</td>
                            <td class='text-center'>
                                <a href='/Product/Edit/${product.id}' class='btn btn-warning btn-sm'>Edit</a>
                                <a href='/Product/Remove/${product.id}' class='btn btn-danger btn-sm'>Remove</a>
                            </td>
                        </tr>`;
                        tbody.append(row);
                    });

                    // Update pagination controls
                    updatePagination(data.totalCount, page, data.pageSize);
                }
            });
        }

        // Function to load and update totals for ALL products
        function loadTotals() {
            $.ajax({
                url: "@Url.Action("GetTotals", "Product")",
                type: "GET",
                success: function (data) {
                    $("#totalSellPrice").text(`$${data.totalSellPrice.toFixed(2)}`);
                    $("#totalBuyPrice").text(`$${data.totalBuyPrice.toFixed(2)}`);
                    $("#totalProfit").text(`$${data.totalProfit.toFixed(2)}`);
                },
                error: function () {
                    $("#totalSellPrice").text("Error");
                    $("#totalBuyPrice").text("Error");
                    $("#totalProfit").text("Error");
                }
            });
        }

        // Function to update pagination controls
        function updatePagination(totalCount, currentPage, pageSize) {
            let totalPages = Math.ceil(totalCount / pageSize);
            let paginationControls = $("#paginationControls");
            paginationControls.empty();

            if (currentPage > 1) {
                paginationControls.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a>
                    </li>
                `);
            }

            for (let i = 1; i <= totalPages; i++) {
                let activeClass = i === currentPage ? "active" : "";
                paginationControls.append(`
                    <li class="page-item ${activeClass}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>
                `);
            }

            if (currentPage < totalPages) {
                paginationControls.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">Next</a>
                    </li>
                `);
            }
        }

        // Event listener for pagination controls
        $(document).on("click", ".page-link", function (e) {
            e.preventDefault();
            let page = $(this).data("page");
            loadProducts(page);
        });

        // Event listener for filter inputs
        $("#searchTerm, #quantityFilter, #quantityInput").on("input change", function () {
            loadProducts(1);
        });

        // Initial load of products and totals
        loadProducts(@Model.PageNumber);
        loadTotals();
    });
</script>